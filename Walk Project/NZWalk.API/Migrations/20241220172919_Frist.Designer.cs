// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NZWalk.API.Data;

#nullable disable

namespace NZWalk.API.Migrations
{
    [DbContext(typeof(NZWalkDbContext))]
    [Migration("20241220172919_Frist")]
    partial class Frist
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NZWalk.API.Models.Domin.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("38ef6ec7-7980-4246-8870-03c20a55ca51"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("69b761a0-cfbf-433b-9714-5ec3c51f96b0"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("2bafd952-673e-4f83-93a3-f9d5ee64b1b7"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NZWalk.API.Models.Domin.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegioImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("73ec7f3d-d25d-4e1b-94dd-ac98766b410b"),
                            Name = "Auckland",
                            RegioImageUrl = "https://media.istockphoto.com/id/1137079196/photo/auckland-panorama-at-sunrise.jpg?s=1024x1024&w=is&k=20&c=ebyZHJ0BbOh_w4gwzmkgAcfzM_6dvXoZ2D3U1ex_Gpc=",
                            code = "AKL"
                        },
                        new
                        {
                            Id = new Guid("641e51e6-68c0-4dec-bb40-e85a8b1a9ce8"),
                            Name = "Bayof Plenty",
                            code = "BOP"
                        },
                        new
                        {
                            Id = new Guid("685dd3c8-c37f-407b-9989-92709bfdd23f"),
                            Name = "Wellington",
                            RegioImageUrl = "https://media.istockphoto.com/id/2066058412/photo/wellington-new-zealands-capital-city.jpg?s=1024x1024&w=is&k=20&c=FasHsT_tNKoUTHwiBsOM1AMjw_u9UCH4Kba1MHmBu0M=",
                            code = "WGN"
                        },
                        new
                        {
                            Id = new Guid("68312b7f-21e4-4871-934f-667afb63894d"),
                            Name = "Nelson",
                            RegioImageUrl = "https://media.istockphoto.com/id/1209995566/photo/panorama-of-nelson-city-reflected-in-the-maitai-river-new-zealand.jpg?s=1024x1024&w=is&k=20&c=ynC5H3sKnrq4Tc4swHlao07JPv13wPEmdwuGG6d7IQE=",
                            code = "NSN"
                        },
                        new
                        {
                            Id = new Guid("19bfb094-a62d-4a63-a7fe-4d5edff31645"),
                            Name = "Southland",
                            code = "STL"
                        });
                });

            modelBuilder.Entity("NZWalk.API.Models.Domin.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NZWalk.API.Models.Domin.Walk", b =>
                {
                    b.HasOne("NZWalk.API.Models.Domin.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NZWalk.API.Models.Domin.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
